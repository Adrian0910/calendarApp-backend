{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareEvents","end","moment","toDate","start","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","console","log","Navbar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","endNow","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","getState","evento","_id","eventStartAddNew","format","amPmAriaLabel","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6ac96e0d.chunk.js","sourcesContent":["\r\n// actions core \r\n\r\nexport const types = {\r\n\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n\r\n    eventSetActive: '[event] Set new',\r\n    eventLogout: '[event] Logout event',\r\n\r\n    eventStartAddNew: '[event] Start add new',\r\n    eventAddNew: '[event] Add new',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdate: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Events loaded',\r\n\r\n    \r\n    authCheckingFinish: '[auth] Finish login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout',\r\n\r\n}\r\n\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    // uid: null,\r\n    // name: null\r\n}\r\n\r\nexport const authReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false,\r\n            }\r\n\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n\r\n        case types.authLogout:\r\n            return{\r\n                checking: false\r\n            }\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n","import { types } from '../types/types';\r\n\r\n// {\r\n//     id: 'dsdsdsd',\r\n//     title: 'Cumpleaños',\r\n//     start: moment().toDate(),\r\n//     end: moment().add( 2, 'hours' ).toDate(),\r\n//     notes: 'Comprar el pastel',\r\n//     user: {\r\n//         _id: '123',\r\n//         name: 'Oxim'\r\n//     }\r\n// }\r\n\r\n\r\nconst initialState = {\r\n\r\n    events: [\r\n\r\n    ],\r\n    activeEvent: null\r\n};\r\n\r\nexport const calendarReducer = ( state = initialState, action) => {\r\n\r\n    switch ( action.type ) {\r\n    \r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventUpdate:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => ( e.id === action.payload.id ) ? action.payload : e\r\n                )\r\n            }\r\n\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                     e => ( e.id !== state.activeEvent.id )\r\n                ),\r\n                 activeEvent: null\r\n            }\r\n\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [ ...action.payload ]\r\n            }\r\n\r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n}\r\n\r\n\r\n\r\nexport const uiReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true,\r\n            }\r\n\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false,\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import { combineReducers } from 'redux';\r\nimport { authReducer } from './authReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { uiReducer } from './uiReducer';\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n});\r\n\r\n\r\n\r\n","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport { rootReducer } from '../reducers/rootReducer';\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);\r\n\r\n\r\n","\r\nconst baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n\r\nconst fetchSinToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n\r\n    if( method === 'GET') {\r\n        return fetch( url );\r\n    }else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n}\r\n\r\n\r\nconst fetchConToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if( method === 'GET') {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        } );\r\n    }else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n}\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}\r\n\r\n","import moment from \"moment\"\r\n\r\n\r\n\r\nexport const prepareEvents = ( events = [] ) => {\r\n\r\n    return events.map(\r\n        (e) => ({\r\n            ...e,\r\n            end: moment( e.end ).toDate(),\r\n            start: moment( e.start ).toDate(),\r\n        })\r\n    )\r\n\r\n}\r\n\r\n","import Swal from 'sweetalert2';\r\n\r\nimport { fetchConToken } from '../helpers/fetch';\r\nimport { prepareEvents } from '../helpers/prepareEvents';\r\nimport { types } from '../types/types';\r\n\r\nexport const eventStartAddNew = ( event ) => {\r\n    return async( dispatch, getState ) => {\r\n        \r\n        const { uid, name } = getState().auth;\r\n\r\n        try {\r\n            const resp = await fetchConToken( 'events', event, 'POST' );\r\n            const body = await resp.json();\r\n\r\n            if( body.ok ){\r\n                event.id = body.evento.id\r\n                event.user = {\r\n                    _id: uid,\r\n                    name:  name\r\n                }\r\n                console.log(event)\r\n                dispatch( eventAddNew(event) );\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n const eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({ type: types.eventClearActiveEvent })\r\n\r\nexport const eventStartUpdate = ( event ) => {\r\n    return async(dispatch) => {\r\n        try {\r\n            \r\n            const resp = await fetchConToken(`events/${ event.id }`, event, 'PUT');\r\n            const body = await resp.json();\r\n\r\n            if( body.ok ){\r\n                dispatch( eventUpdated(event) );\r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error' );\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nconst eventUpdated = ( event ) => ({\r\n    type: types.eventUpdate,\r\n    payload: event,\r\n})\r\n\r\nexport const eventStartDelete = () => {\r\n    return async ( dispatch, getState ) => {\r\n\r\n        const {id} = getState().calendar.activeEvent;\r\n        try {\r\n            \r\n            const resp = await fetchConToken(`events/${ id }`, {}, 'DELETE');\r\n            const body = await resp.json();\r\n\r\n            if( body.ok ){\r\n                dispatch( eventDeleted() );\r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error' );\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventDeleted = () => ({ type: types.eventDeleted })\r\n\r\nexport const eventStartLoading = () => {\r\n    return async(dispatch) => {\r\n        try {\r\n            const resp = await fetchConToken( 'events' );\r\n            const body = await resp.json();\r\n           \r\n            const events = prepareEvents( body.eventos );\r\n            \r\n            dispatch( eventLoaded( events ) )\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n})\r\n\r\nexport const eventLogout = () => ({\r\n    type: types.eventLogout\r\n});\r\n\r\n","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport { eventLogout } from \"./events\";\r\n\r\n\r\nexport const startLogin = ( email, password ) => {\r\n    return async( dispatch ) => {\r\n        \r\n        const resp = await fetchSinToken( 'auth', { email, password }, 'POST' );\r\n        const body = await resp.json();\r\n\r\n        if( body.ok ) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) );\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startRegister = ( email, password, name ) => {\r\n    return async( dispatch ) => {\r\n\r\n        const resp = await fetchSinToken( 'auth/new', { email, name, password }, 'POST' );\r\n        const body = await resp.json();\r\n\r\n        if( body.ok ) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) );\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async(dispatch) => {\r\n\r\n        const resp = await fetchConToken( 'auth/renew' );\r\n        const body = await resp.json();\r\n\r\n        if( body.ok ) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) );\r\n        } else {\r\n            dispatch( checkingFinish() );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\r\n\r\n\r\nconst login = ( user ) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\n\r\nexport const startLogout = () => {\r\n    return( dispatch ) => {\r\n\r\n        localStorage.clear();\r\n        dispatch( eventLogout() );\r\n        dispatch( logout() );\r\n\r\n    }\r\n}\r\n\r\nconst logout = () => ({ type: types.authLogout });\r\n\r\n\r\n","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\r\n        lEmail: 'correo1@gmail.com',\r\n        lPassword: '123456',\r\n    });\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\r\n        rName: 'Nando',\r\n        rEmail: 'nando@gmail.com',\r\n        rPassword1: '123456',\r\n        rPassword2: '123456',\r\n    });\r\n\r\n    const { lEmail, lPassword } = formLoginValues;\r\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\r\n\r\n\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch( startLogin( lEmail, lPassword) );\r\n    }\r\n\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if( rPassword1 !== rPassword2 ){\r\n            return Swal.fire('Error', 'Las constraseñas deben ser iguales', 'error');\r\n        }\r\n        console.log('?')\r\n        dispatch( startRegister( rEmail, rPassword1, rName ) );\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={ handleLogin }>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={lEmail}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={lPassword}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit= {handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={rName}\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={rEmail}\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"rPassword1\"\r\n                                value={rPassword1}\r\n                                onChange={ handleRegisterInputChange } \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name=\"rPassword2\"\r\n                                value={rPassword2}\r\n                                onChange={ handleRegisterInputChange } \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { name } = useSelector( state => state.auth );\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar  navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                { name }\r\n            </span>\r\n\r\n            <button \r\n                className=\"btn btn-outline-danger\"\r\n                onClick={ handleLogout }\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ( { event } ) => {\r\n\r\n    const { title, user } = event;\r\n\r\n    return (\r\n        <div>\r\n            <strong>{ title }</strong>\r\n            <strong>- { user.name }</strong>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\n\r\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\r\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2'\r\n\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n\r\n\r\n//Styles\r\n    const customStyles = {\r\n        content: {\r\n          top: '50%',\r\n          left: '50%',\r\n          right: 'auto',\r\n          bottom: 'auto',\r\n          marginRight: '-50%',\r\n          transform: 'translate(-50%, -50%)',\r\n        },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst endNow = now.clone().add( 1, 'hours' );\r\n\r\nconst initEvent = {\r\n  title: '',\r\n  notes: '',\r\n  start: now.toDate(),\r\n  end: endNow.toDate()\r\n}\r\n\r\n\r\nexport const CalendarModal = () => {\r\n\r\n  const { modalOpen } = useSelector( state => state.ui );\r\n  const { activeEvent } = useSelector( state => state.calendar );\r\n  const dispatch = useDispatch();\r\n\r\n  const [ dateStart, setDateStart ] = useState( now.toDate() );\r\n  const [ dateEnd, setDateEnd ] = useState( endNow.toDate() );\r\n  const [titleValid, setTitleValid] = useState(true);\r\n\r\n\r\n  const [formValues, setFormValues] = useState({ initEvent });\r\n\r\n\r\n  const { title, notes, start, end } = formValues;\r\n\r\n  useEffect(() => {\r\n    if( activeEvent ) {\r\n      setFormValues( activeEvent );\r\n    } else {\r\n      setFormValues( initEvent );\r\n    }\r\n\r\n  }, [activeEvent, setFormValues]);\r\n\r\n  const handleInputChange = ({ target }) => {\r\n\r\n    setFormValues({\r\n      ...formValues,\r\n      [target.name]: target.value,\r\n    });\r\n\r\n  }\r\n\r\n  const closeModal = () => {\r\n    //TODO: close modal\r\n       dispatch( uiCloseModal() );\r\n       dispatch( eventClearActiveEvent() );\r\n       setFormValues( initEvent );\r\n        \r\n  }\r\n\r\n  const handleStartDateChange = (e) => {\r\n    setDateStart(e);\r\n    setFormValues({\r\n      ...formValues,\r\n      start: e,\r\n    })\r\n  }\r\n\r\n  const handleEndDateChange = (e) => {\r\n    setDateEnd(e);\r\n    setFormValues({\r\n      ...formValues,\r\n      end: e,\r\n    })\r\n  }\r\n\r\n  const handleSubmitform = (e) => {\r\n    e.preventDefault();\r\n    \r\n    const momentStart = moment( start );\r\n    const momentEnd = moment( end );\r\n\r\n    if ( momentStart.isSameOrAfter( momentEnd ) ){\r\n      return Swal.fire('Error', 'La fecha de fin debe ser mayor a la fecha de inicio', 'error');\r\n    }\r\n\r\n    if ( title.trim().length < 2 ) {\r\n      return setTitleValid(false);\r\n    }\r\n\r\n\r\n    if( activeEvent ) {\r\n      dispatch( eventStartUpdate( formValues ) );\r\n    } else {\r\n\r\n      dispatch( eventStartAddNew(formValues) );\r\n  }\r\n\r\n    setTitleValid(true);\r\n    closeModal();\r\n\r\n  }\r\n\r\n\r\n    return (\r\n\r\n        <Modal\r\n            isOpen={ modalOpen }\r\n            onRequestClose={ closeModal }\r\n            style={ customStyles }\r\n            closeTimeoutMS={ 200 }\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n        >\r\n            <h1> { (activeEvent)? 'Editar evento': 'Nuevo evento' } </h1>\r\n          <hr />\r\n          <form \r\n            className=\"container\"\r\n            onSubmit={ handleSubmitform }\r\n          >\r\n\r\n              <div className=\"form-group\">\r\n                  <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                      onChange={ handleStartDateChange }\r\n                      value={ dateStart }\r\n                      className=\"form-control\"\r\n                      format=\"dd/MM/y h:mm a\"\r\n                      amPmAriaLabel=\"Select AM/PM\"\r\n                    />              \r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                  <label>Fecha y hora fin</label>\r\n                  <DateTimePicker\r\n                      onChange={ handleEndDateChange }\r\n                      value={ dateEnd }\r\n                      minDate={ dateStart }\r\n                      className=\"form-control\"\r\n                      format=\"dd/MM/y h:mm a\"\r\n                      amPmAriaLabel=\"Select AM/PM\"\r\n                    />  \r\n              </div>\r\n\r\n              <hr />\r\n              <div className=\"form-group\">\r\n                  <label>Titulo y notas</label>\r\n                  <input \r\n                      type=\"text\" \r\n                      className={`form-control ${ !titleValid && 'is-invalid'}`}\r\n                      placeholder=\"Título del evento\"\r\n                      name=\"title\"\r\n                      autoComplete=\"off\"\r\n                      value={ title }\r\n                      onChange={ handleInputChange }\r\n                  />\r\n                  <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                  <textarea \r\n                      type=\"text\" \r\n                      className=\"form-control\"\r\n                      placeholder=\"Notas\"\r\n                      rows=\"5\"\r\n                      name=\"notes\"\r\n                      value={ notes }\r\n                      onChange={ handleInputChange }\r\n                  ></textarea>\r\n                  <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n              </div>\r\n\r\n              <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-outline-primary btn-block\"\r\n              >\r\n                  <i className=\"far fa-save\"></i>\r\n                  <span> Guardar</span>\r\n              </button>\r\n\r\n          </form>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickNew = () => {\r\n        dispatch( uiOpenModal() );\r\n    }\r\n\r\n\r\n    return (\r\n        <button \r\n            className=\"btn btn-primary fab\"\r\n            onClick={ handleClickNew }\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch( eventStartDelete() );\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={handleDelete}\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar evento</span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport moment from 'moment';\r\n\r\n\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\n\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\n\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport 'moment/locale/es';//español\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');//español\r\n\r\n\r\nconst localizer = momentLocalizer(moment); \r\n\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n\r\n    //hooks\r\n    const dispatch = useDispatch();\r\n    //TODO: read store events\r\n    const { events, activeEvent } = useSelector( state => state.calendar );\r\n    const { uid } = useSelector( state => state.auth );\r\n\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\r\n\r\n    useEffect(() => {\r\n        dispatch( eventStartLoading() );\r\n    }, [dispatch]);\r\n\r\n    //Actions events\r\n    const onDoubleClick = (e) => {\r\n        dispatch( uiOpenModal() );\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch( eventSetActive( e ) );\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n        \r\n        dispatch( eventClearActiveEvent() );\r\n    }\r\n\r\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\r\n        \r\n        \r\n\r\n        const style = {\r\n            backgroundColor: ( uid === event.user._id ) ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white',\r\n        }\r\n\r\n        return {\r\n            style\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onView={onViewChange}\r\n                onSelectSlot={ onSelectSlot }\r\n                selectable={ true }\r\n                view={lastView}\r\n                components={{\r\n                    event: CalendarEvent,\r\n                }}\r\n            />\r\n\r\n\r\n            <AddNewFab />\r\n\r\n            {\r\n                (activeEvent) && <DeleteEventFab />\r\n            }\r\n            \r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Redirect, Route } from 'react-router';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest //el resto de los componentes\r\n}) => {\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={ (props) => (\r\n                (isAuthenticated )\r\n                    ? (<Component {...props} />)\r\n                    : (<Redirect to=\"/login\" />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Redirect, Route } from 'react-router';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest //el resto de los componentes\r\n}) => {\r\n    return (\r\n        <Route {...rest}\r\n            component={ (props) => (\r\n                (isAuthenticated )\r\n                ? (<Redirect to=\"/\" />)\r\n                : (<Component {...props} />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\nimport { startChecking } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector( state => state.auth );\r\n\r\n    useEffect(() => {\r\n        dispatch( startChecking() );\r\n    }, [dispatch])\r\n\r\n    if( checking ){\r\n        return (<h5>Espere...</h5>);\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n\r\n                    <PublicRoute exact\r\n                        path='/login'\r\n                        component={LoginScreen}\r\n                        isAuthenticated={ !!uid }\r\n                    />\r\n\r\n                    <PrivateRoute exact\r\n                        path='/'\r\n                        component={CalendarScreen}\r\n                        isAuthenticated={ !!uid }\r\n                    />\r\n\r\n                    <Redirect to='/' />\r\n\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\n\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './router/AppRouter';\r\n\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store= { store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css'\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}